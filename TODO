Things that should get done at some point.

If you have free time and are interested in looking at any of these,
have a look at the relevant code and drop an email to me
<alistair.js.boyle@gmail.com>. I'd be more than pleased to look
at any patches or discuss potential solutions.

These are somewhat arranged in order of priority. Highest at the top.

 - add input list option to launcher (what matrices to run)
 ?? are there any other stats we'd like to collect?
 - Add type tests: condition number, singularity, symmetric, hermitian, real, complex
   ?? others
 - Make some default lists of common matrices used in papers.
 - Look at KCachegrind, Callgrind for profiling.
 - for summary, when a failed test is encountered, add it to an summary.err file
   so its easy to see where those happened
 - add internal matrix handling (CSR <-> COO <-> CSC conversions need implementing
   and are currently using BeBOP as by wrapping it,
   COO <-> DROW <-> DCOL are handled already)

 - make -v work with --list-solvers in any option order (execute after processing args)
 - better cores/threads output (indicate if MPI and/or openMP are being used, give non-zero number of threads/cores)

 - add tests mpirun -n 2 for MPI solvers (mumps is broken!)
 - add tests for single-threaded only solvers (clean error message)
 - add tests for symmetric solvers
 - add tests for symmetric positive definite solvers
 - add tests for 'mpirun -n N' with various error messages: only one error message should be printed
 - add tests for matrix conversion: use validate_matrix
 - add tests for copy_matrix -- seems to be broken
   - then re-instate copy_matrix in printf_matrix

 - fix "inline" in matrix.c/h
 - add optimization: DROW <-> DCOL when they're a single vector short-circuit
 - extend tests/unit-matrix.c to push things harder

Fix memory leaks:
 - Run valgrind. Find bad allocations and uninitialized variables.
 - there is a leak in one of the shared libraries atexit() - probably
   the BeBop sparse matrix loader library, maybe rewrite/extract the bits
   I need and clean it up, it seems to be only partially functional from my tests

For the immediate future:
 - For EIT simulations we're interested in square matrices.
   Real problems are symmetric. Complex problems are *not* Hermitian.
