Things that should get done at some point.

If you have free time and are interested in looking at any of these,
have a look at the relevant code and drop an email to me
<alistair.js.boyle@gmail.com>. I'd be more than pleased to look
at any patches or discuss potential solutions.

These are somewhat arranged in order of priority. Highest at the top.

 - Run valgrind. Find bad allocations and uninitialized variables.
 - Refactor, refactor, refactor.
 - Get arbitrary (single) file loading working. (command line args)
   - recognize file type from extension
 - Add ability to increase verbosity (-v, -vv, -vvv) for debugging.
   - at minimum verbosity, output nothing but timing info if enabled, on a single line per matrix
     (i.e. if -t, verbosity--, for each -v, verbosity++)
     - cpus, smps/cpu, load-time, ordering-time, solve-time
   - build so we can dump it into a spreadsheet.csv
 - Add ability to save to an output file (-o)
 - Change default to outputing on stdout, rather than default-filename.mm
 - Get this system compiling on sharcnet systems. (mako, hound, guppy)
 - Add other solvers - single system, SMP
   ?? which ones
 - Add ability to download from matrix libraries given input list [seperate script]
   - University of Florida sparse matrix collection
   - Harwell-Boeing sparse matrix collection
 ?? are there any other stats we'd like to collect?
 - Add type tests: condition number, singularity, symmetric, hermitian
   ?? others
 - Make some default lists of common matrices used in papers.
 - Look at KCachegrind, Callgrind for profiling.

Fix memory leaks:
 - there is a leak in one of the shared libraries atexit() - probably
   the BeBop sparse matrix loader library, maybe rewrite/extract the bits
   I need and clean it up, it seems to be only partially functional from my tests

# because of the broken shared libraries that are linked in by the makefile:
> gcc unit-perftimer.c ../src/perftimer.c -I ../src/
> valgrind --trace-children=yes --track-origins=yes --leak-check=full ./a.out
 - A leak in perftimer_restart()
      ==6786== 32 bytes in 1 blocks are definitely lost in loss record 1 of 1
      ==6786==    at 0x4C2602E: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
      ==6786==    by 0x4011C1: _perftimer_malloc_head (in /home/boyle/phd/SYSC5906/meagre-crowd/tests/a.out)
      ==6786==    by 0x401D4B: perftimer_restart (in /home/boyle/phd/SYSC5906/meagre-crowd/tests/a.out)
      ==6786==    by 0x400AF9: test_basic (in /home/boyle/phd/SYSC5906/meagre-crowd/tests/a.out)
      ==6786==    by 0x4011A1: main (in /home/boyle/phd/SYSC5906/meagre-crowd/tests/a.out)
