AT_INIT()
AT_COPYRIGHT([Copyright (C) 2010, Alistair Boyle])
AT_COLOR_TESTS

AT_TESTED(AT_PACKAGE_NAME)


AT_BANNER([hello-world])
AT_SETUP([mpi default: 1 node])
AT_KEYWORDS([mpi hello])
AT_CHECK([helloworld-mpi],0,[Hello world from process 0 of 1
])
AT_CLEANUP

AT_SETUP([mpi: 1 node])
AT_KEYWORDS([mpi hello])
AT_CHECK([mpirun -n 1 helloworld-mpi],0,[Hello world from process 0 of 1
])
AT_CLEANUP

AT_SETUP([mpi: 2 nodes])
AT_KEYWORDS([mpi hello])
AT_CHECK([mpirun -n 2 helloworld-mpi],0,ignore)
AT_CLEANUP


AT_SETUP([mpi: 3 nodes])
AT_KEYWORDS([mpi hello])
AT_CHECK([mpirun -n 3 helloworld-mpi],0,ignore)
AT_CLEANUP

AT_SETUP([mpi: 4 nodes])
AT_KEYWORDS([mpi hello])
AT_CHECK([mpirun -n 4 helloworld-mpi],0,ignore)
AT_CLEANUP


AT_SETUP([mumps])
AT_KEYWORDS([mumps hello])
AT_CHECK([mpirun -n 4 helloworld-mumps],0,[Solution is ( 1.00; 2.00 ): PASS
])
AT_CLEANUP

AT_SETUP([matrix-market files])
AT_KEYWORDS([file hello])
AT_DATA([test.rb],m4_include(tests/test.rb))
AT_DATA([test.hb],m4_include(tests/test.hb))
AT_DATA([test.mm],m4_include(tests/test.mm))
AT_CHECK([file],0,[harwell-boeing
rutherford-boeing
matrix market
PASS
])
AT_CLEANUP

AT_SETUP([file-based mumps])
AT_KEYWORDS([mumps-file hello])
AT_DATA([test.mm],m4_include(tests/test.mm))
AT_CHECK(mpirun -n 4 mumps-file,0,ignore)
AT_CLEANUP

AT_BANNER([help])

m4_define([MC_CHECK_HELP_NOCRASH],[
AT_SETUP([$1])
AT_KEYWORDS([help])
AT_CHECK(AT_PACKAGE_NAME[ $1],,ignore)
AT_CLEANUP
])

m4_define([MC_CHECK_HELP_VER],[
AT_SETUP([$1])
AT_KEYWORDS([help])
AT_CHECK(AT_PACKAGE_NAME[ $1],,AT_PACKAGE_NAME[ ]AT_PACKAGE_VERSION[
])
AT_CLEANUP
])


AT_SETUP([empty command-line])
AT_KEYWORDS([help])
AT_CHECK(AT_PACKAGE_NAME,1,,ignore)
AT_CLEANUP
MC_CHECK_HELP_NOCRASH([--help])
MC_CHECK_HELP_NOCRASH([-h])
MC_CHECK_HELP_NOCRASH([-?])
MC_CHECK_HELP_VER([-V])
MC_CHECK_HELP_VER([--version])



m4_define([MC_UNIT_TEST],[
AT_SETUP([$1])
AT_KEYWORDS([unit])
AT_CHECK([unit-$1],,ignore)
AT_CLEANUP
])


AT_BANNER([unit tests])
MC_UNIT_TEST([perftimer])



AT_BANNER([functional tests])
# test the file input
AT_SETUP([-i <none>])
AT_KEYWORDS([func])
AT_CHECK(AT_PACKAGE_NAME -p,1,,[input error: No input specified (-i)
])
AT_CLEANUP
AT_SETUP([-i bad])
AT_KEYWORDS([func])
AT_CHECK(AT_PACKAGE_NAME -i bad,1,,[input error: No such file or directory
])
AT_CLEANUP
AT_SETUP([-i broken.mm])
AT_DATA([broken.mm],[ Jibberish file
not even the right format
])
AT_KEYWORDS([func])
# TODO clean up the garbage left by read_matrix_market_sparse when it fails (turn it off somehow?)
AT_CHECK(AT_PACKAGE_NAME -i broken.mm,1,,[*** read_matrix_market_sparse: Could not process MatrixMarket banner ***
*** load_sparse_matrix: Failed to read MatrixMarket format sparse matrix from file "broken.mm", error code 14 ***
input error: Failed to load matrix
])
AT_CLEANUP
AT_SETUP([-i test.mm])
AT_KEYWORDS([func])
AT_DATA([test.mm],m4_include(tests/test.mm))
AT_CHECK(AT_PACKAGE_NAME -i test.mm,0,ignore)
AT_CLEANUP
