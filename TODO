Things that should get done at some point.

If you have free time and are interested in looking at any of these,
have a look at the relevant code and drop an email to me
<alistair.js.boyle@gmail.com>. I'd be more than pleased to look
at any patches or discuss potential solutions.

These are somewhat arranged in order of priority. Highest at the top.

 - add input list option to launcher (what matrices to run)
 ?? are there any other stats we'd like to collect?
 - Add type tests: condition number, singularity, symmetric, hermitian, real, complex
   ?? others
 - Make some default lists of common matrices used in papers.
 - Look at KCachegrind, Callgrind for profiling.
 - for summary, when a failed test is encountered, add it to an summary.err file
   so its easy to see where those happened
 - add internal matrix handling (CSR <-> COO <-> CSC conversions need implementing
   and are currently using BeBOP as by wrapping it,
   COO <-> DROW <-> DCOL are handled already)

 - make -v work with --list-solvers in any option order (execute after processing args)
 - better cores/threads output (indicate if MPI and/or openMP are being used, give non-zero number of threads/cores)
 - clean up output so its easier to parse, more uniform (memory usage, etc)

 - add tests mpirun -n 2 for MPI solvers (mumps was broken for a while before catching it!)
 - add tests for single-threaded only solvers (clean error message)
 - add tests for symmetric solvers
 - add tests for symmetric positive definite solvers
 - add tests for 'mpirun -n N' with various error messages: only one error message should be printed
 - add tests for matrix conversion: use validate_matrix
 - add tests for multiple right-hand sides for all solvers

 - file IO:
   - add unit-tests for MatrixMarket format
   - rewrite MatrixMarket file writer
   - add support for MatrixMarket symmetric matrices
   - clean up error handling for file read/write
   - determine matrix type from file's header rather than file extension
     - detect and report a nice error when we get a format we can't handle
   - add support for
     - Rutherford-Boeing
     - Harwell-Boeing (CSC)
     - MATLAB's various formats
     - coordinate format

 - fix "inline" in matrix.c/h
 - extend tests/unit-matrix.c to push things harder

Fix memory leaks:
 - Run valgrind. Find bad allocations and uninitialized variables.

For the immediate future:
 - For EIT simulations we're interested in square matrices.
   Real problems are symmetric. Complex problems are *not* Hermitian.
